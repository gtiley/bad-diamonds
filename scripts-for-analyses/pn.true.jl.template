using PhyloNetworks
#using PhyloPlots
using CSV
using Distributed
addprocs(3)
@everywhere using PhyloNetworks

#d1 T_sp = readTopology("((A,B),(C,D),((E,F),(G,H)));")
#d2 T_sp = readTopology("(A,(C,D),((E,F),(G,H)));")
#d3 T_sp = readTopology("((A,B),C,((E,F),(G,H)));")
#d4 T_sp = readTopology("((A,B),(C,D),(E,(G,H)));")
#d5 T_sp = readTopology("((A,B),(C,D),((E,F),G));")
#d6 T_sp = readTopology("(A,C,((E,F),(G,H)));")
#d7 T_sp = readTopology("((A,B),C,(E,(G,H)));")
#d8 T_sp = readTopology("((A,B),(C,D),(E,G));")
#d9 T_sp = readTopology("(A,(C,D),((E,F),G));")

genetrees = readMultiTopology("/data/users_area/gti10kg/badDiamond/__ROOTING__/simulationResults/__DIAMOND__/__NLOCI__/__I__/trees/__I__.trees")

df_ind = writeTableCF(countquartetsintrees(genetrees)...)
CSV.write("__I__.true.tableCF_individuals.csv", df_ind)
#d1 df_sp = mapAllelesCFtable("/data/users_area/gti10kg/badDiamond/spMaps/namemap.d1.txt", "__I__.true.tableCF_individuals.csv");
#d2 df_sp = mapAllelesCFtable("/data/users_area/gti10kg/badDiamond/spMaps/namemap.d2.txt", "__I__.true.tableCF_individuals.csv");
#d3 df_sp = mapAllelesCFtable("/data/users_area/gti10kg/badDiamond/spMaps/namemap.d3.txt", "__I__.true.tableCF_individuals.csv");
#d4 df_sp = mapAllelesCFtable("/data/users_area/gti10kg/badDiamond/spMaps/namemap.d4.txt", "__I__.true.tableCF_individuals.csv");
#d5 df_sp = mapAllelesCFtable("/data/users_area/gti10kg/badDiamond/spMaps/namemap.d5.txt", "__I__.true.tableCF_individuals.csv");
#d6 df_sp = mapAllelesCFtable("/data/users_area/gti10kg/badDiamond/spMaps/namemap.d6.txt", "__I__.true.tableCF_individuals.csv");
#d7 df_sp = mapAllelesCFtable("/data/users_area/gti10kg/badDiamond/spMaps/namemap.d7.txt", "__I__.true.tableCF_individuals.csv");
#d8 df_sp = mapAllelesCFtable("/data/users_area/gti10kg/badDiamond/spMaps/namemap.d8.txt", "__I__.true.tableCF_individuals.csv");
#d9 df_sp = mapAllelesCFtable("/data/users_area/gti10kg/badDiamond/spMaps/namemap.d9.txt", "__I__.true.tableCF_individuals.csv");
d_sp = readTableCF!(df_sp);
df_sp = writeTableCF(d_sp);
CSV.write("__I__.true.CFtable_species.csv", df_sp)

net0 = snaq!(T_sp, d_sp, hmax=0, runs=10, filename="__I__.net0.true.snaq", seed=__R1__);
net1 = snaq!(net0, d_sp, hmax=1, runs=10, filename="__I__.net1.true.snaq", seed=__R2__);
net2 = snaq!(net1, d_sp, hmax=2, runs=10, filename="__I__.net2.true.snaq", seed=__R3__);
scores = [net0.loglik, net1.loglik, net2.loglik]


